/*
 * This source file was generated by the Gradle 'init' task
 */
package io.landotech;

import io.landotech.generators.KeyGenerator;

import java.util.Base64;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.io.FileWriter;
import java.io.IOException;

public class App {

    public static void main(String[] args) {
        var keyGenerator = new KeyGenerator("Ed25519");
        var keyPair = keyGenerator.getKeyPair();

        var publicKey = keyPair.getPublic();
        var privateKey = keyPair.getPrivate();

        if (writeKeyPairFiles(publicKey, privateKey)) {
            System.out.println("KeyPair has been saved");
        }

        System.out.println("Public key: " + publicKey.getAlgorithm() + " Format: " + publicKey.getFormat());
        System.out.println("Private key: " + privateKey.getAlgorithm() + " Format: " + privateKey.getFormat());
    }

    public static boolean writeKeyPairFiles(PublicKey publicKey, PrivateKey privateKey) {
	    try {
	    	var pubKeyFile = new FileWriter("/home/aaron/.ssh/new_public_key.pub");
	    	var privKeyFile = new FileWriter("/home/aaron/.ssh/new_private_key");

            pubKeyFile.write("ssh-ed25519" + " " + Base64.getEncoder().encodeToString(publicKey.getEncoded()));
            privKeyFile.write("ssh-" + privateKey.getAlgorithm().toLowerCase() + " " + Base64.getEncoder().encodeToString(privateKey.getEncoded()));

            pubKeyFile.close();
            privKeyFile.close();
            return true;
	    } catch (IOException e) {
            System.out.println(e.getMessage());
            return false;
        }
    }
}
